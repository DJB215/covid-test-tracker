{"ast":null,"code":"import _slicedToArray from\"/Users/darrellbullock/Documents/ReactJS/quidell-tracker/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{useHistory}from'react-router-dom';import LoginForm from'./LoginForm';import VerifyForm from'./VerifyForm';import{jsx as _jsx}from\"react/jsx-runtime\";var Login=function Login(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),activeStep=_useState2[0],setActiveStep=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),loginId=_useState4[0],setLoginId=_useState4[1];var history=useHistory();var steps=['Einstein Login ID','Verification Code'];var handleNextLogin=function handleNextLogin(e){e.preventDefault();setLoginId(document.getElementById('EinsteinId').value);setActiveStep(activeStep+1);};var handleNextVerify=function handleNextVerify(e){e.preventDefault();var newVerifyCode=document.getElementById('secretCode').value;var newRandomCode=document.getElementById('randomCode').value;if(newVerifyCode===newRandomCode){history.push({pathname:'/scanner',state:{loginId:values.loginId}});}else{alert(\"The verification code you entered did not match the verification code that was sent to you. Please try again.\");}};var handleBack=function handleBack(e){setActiveStep(activeStep-1);};var handleSubmit=function handleSubmit(e){e.preventDefault();console.log(e.target.value,loginId);};var handleChange=function handleChange(input){return function(e){console.log(input);};};var values={loginId:loginId};switch(activeStep){case 0:return/*#__PURE__*/_jsx(LoginForm,{handleChange:handleChange,values:values,handleNext:handleNextLogin,steps:steps,activeStep:activeStep,handleSubmit:handleSubmit});case 1:return/*#__PURE__*/_jsx(VerifyForm,{handleChange:handleChange,values:values,handleBack:handleBack,handleNext:handleNextVerify,steps:steps,activeStep:activeStep});default:throw new Error('Unknown step');}};export default Login;","map":{"version":3,"sources":["/Users/darrellbullock/Documents/ReactJS/quidell-tracker/client/src/components/Login.jsx"],"names":["React","useState","useHistory","LoginForm","VerifyForm","Login","activeStep","setActiveStep","loginId","setLoginId","history","steps","handleNextLogin","e","preventDefault","document","getElementById","value","handleNextVerify","newVerifyCode","newRandomCode","push","pathname","state","values","alert","handleBack","handleSubmit","console","log","target","handleChange","input","Error"],"mappings":"qLAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,C,2CAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAM,eACoBJ,QAAQ,CAAC,CAAD,CAD5B,wCACTK,UADS,eACGC,aADH,8BAEcN,QAAQ,CAAC,EAAD,CAFtB,yCAETO,OAFS,eAEAC,UAFA,eAIhB,GAAMC,CAAAA,OAAO,CAAGR,UAAU,EAA1B,CAEA,GAAMS,CAAAA,KAAK,CAAG,CAAC,mBAAD,CAAsB,mBAAtB,CAAd,CAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,CAAD,CAAO,CAC3BA,CAAC,CAACC,cAAF,GACAL,UAAU,CAACM,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,KAAvC,CAAV,CACAV,aAAa,CAACD,UAAU,CAAG,CAAd,CAAb,CACH,CAJD,CAMA,GAAMY,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACL,CAAD,CAAO,CAC5BA,CAAC,CAACC,cAAF,GACA,GAAIK,CAAAA,aAAa,CAAGJ,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,KAA1D,CACA,GAAIG,CAAAA,aAAa,CAAGL,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,KAA1D,CAEA,GAAIE,aAAa,GAAKC,aAAtB,CAAqC,CACjCV,OAAO,CAACW,IAAR,CAAa,CACTC,QAAQ,CAAE,UADD,CAETC,KAAK,CAAE,CAAEf,OAAO,CAAEgB,MAAM,CAAChB,OAAlB,CAFE,CAAb,EAIH,CALD,IAKO,CACHiB,KAAK,CAAC,+GAAD,CAAL,CACH,CAEJ,CAdD,CAgBA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACb,CAAD,CAAO,CACtBN,aAAa,CAACD,UAAU,CAAG,CAAd,CAAb,CACH,CAFD,CAIA,GAAMqB,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACd,CAAD,CAAO,CACxBA,CAAC,CAACC,cAAF,GACAc,OAAO,CAACC,GAAR,CAAYhB,CAAC,CAACiB,MAAF,CAASb,KAArB,CAA4BT,OAA5B,EACH,CAHD,CAKA,GAAMuB,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAC,KAAK,QAAI,UAAAnB,CAAC,CAAI,CAC/Be,OAAO,CAACC,GAAR,CAAYG,KAAZ,EACH,CAFyB,EAA1B,CAIA,GAAMR,CAAAA,MAAM,CAAG,CAAEhB,OAAO,CAAPA,OAAF,CAAf,CAEA,OAAQF,UAAR,EACI,IAAK,EAAL,CACI,mBACI,KAAC,SAAD,EACI,YAAY,CAAEyB,YADlB,CAEI,MAAM,CAAEP,MAFZ,CAGI,UAAU,CAAEZ,eAHhB,CAII,KAAK,CAAED,KAJX,CAKI,UAAU,CAAEL,UALhB,CAMI,YAAY,CAAEqB,YANlB,EADJ,CAUJ,IAAK,EAAL,CACI,mBACI,KAAC,UAAD,EACI,YAAY,CAAEI,YADlB,CAEI,MAAM,CAAEP,MAFZ,CAGI,UAAU,CAAEE,UAHhB,CAII,UAAU,CAAER,gBAJhB,CAKI,KAAK,CAAEP,KALX,CAMI,UAAU,CAAEL,UANhB,EADJ,CAUJ,QACI,KAAM,IAAI2B,CAAAA,KAAJ,CAAU,cAAV,CAAN,CAxBR,CA0BH,CAvED,CAyEA,cAAe5B,CAAAA,KAAf","sourcesContent":["import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport LoginForm from './LoginForm';\nimport VerifyForm from './VerifyForm';\n\nconst Login = () => {\n    const [activeStep, setActiveStep] = useState(0);\n    const [loginId, setLoginId] = useState('');\n\n    const history = useHistory();\n\n    const steps = ['Einstein Login ID', 'Verification Code'];\n\n    const handleNextLogin = (e) => {\n        e.preventDefault();\n        setLoginId(document.getElementById('EinsteinId').value);\n        setActiveStep(activeStep + 1 );\n    }\n\n    const handleNextVerify = (e) => {\n        e.preventDefault();\n        let newVerifyCode = document.getElementById('secretCode').value\n        let newRandomCode = document.getElementById('randomCode').value\n\n        if (newVerifyCode === newRandomCode) {\n            history.push({\n                pathname: '/scanner',\n                state: { loginId: values.loginId }\n            });\n        } else {\n            alert(\"The verification code you entered did not match the verification code that was sent to you. Please try again.\")\n        }\n        \n    }\n\n    const handleBack = (e) => {\n        setActiveStep(activeStep - 1 );\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(e.target.value, loginId)\n    }\n\n    const handleChange = input => e => {\n        console.log(input)\n    }\n\n    const values = { loginId }\n\n    switch (activeStep) {\n        case 0:\n            return (\n                <LoginForm\n                    handleChange={handleChange}\n                    values={values}\n                    handleNext={handleNextLogin}\n                    steps={steps}\n                    activeStep={activeStep}\n                    handleSubmit={handleSubmit}\n                />\n            );\n        case 1:\n            return (\n                <VerifyForm\n                    handleChange={handleChange}\n                    values={values}\n                    handleBack={handleBack}\n                    handleNext={handleNextVerify}\n                    steps={steps}\n                    activeStep={activeStep}\n                />\n            );\n        default:\n            throw new Error('Unknown step');\n    }\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}