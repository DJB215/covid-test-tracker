{"ast":null,"code":"var _jsxFileName = \"/Users/darrellbullock/Documents/ReactJS/quidell-tracker/client/src/components/Scanner.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CssBaseline, Box, Container, Button, Typography, createTheme, ThemeProvider, TextField, Select, MenuItem, FormControl, InputLabel } from '@material-ui/core'; //import axios from 'axios';\n//import Alert from '@mui/material/Alert';\n\nimport { useHistory } from 'react-router-dom';\nimport BarcodeScannerComponent from 'react-webcam-barcode-scanner2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = 'http://localhost:5000/covid/new';\n\nconst Scanner = props => {\n  _s();\n\n  const history = useHistory();\n  const [TestResult, setTestResult] = useState('');\n  const [EinsteinID, setEinsteinID] = useState('');\n  const [CovidTestCode, setCovidTestCode] = useState('Not Found');\n  setEinsteinID(history.location.state.loginId);\n  const theme = createTheme();\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    console.log(EinsteinID, TestResult, CovidTestCode); // try {\n    //     await axios({\n    //         method: 'POST',\n    //         url: 'http://localhost:5000/covid/new',\n    //         data: {\n    //             EinsteinID: formData.get('userId'),\n    //             CovidTestCode: formData.get('testId'),\n    //             TestResult: formData.get('testResult'),\n    //         },\n    //         headers: { 'Content-Type': 'multipart/form-data' }\n    //     })\n    //     .then((response) => {\n    //         console.log(response)\n    //     })\n    // } catch (error) {\n    //     console.log(error)\n    // }\n    // console.log(event.currentTarget);\n    // console.log({\n    //     testID: formData.get('testId'),\n    //     testResult: formData.get('testResult'),\n    //     loginId: formData.get('userId')\n    // });\n    // console.log(data);\n    // fetch('http://localhost:5000/covid/new', {\n    //     method: 'POST',\n    //     headers: {\n    //         'Accept': 'application/json',\n    //         'Content-Type': 'application/json'\n    //     },\n    //     body: JSON.stringify({\n    //         EinsteinID: formData.get('userId'),\n    //         CovidTestCode: formData.get('testId'),\n    //         TestResult: formData.get('testResult')\n    //     })\n    // })\n    // .then(res => res.json())\n    // .then(data => console.log(data))\n    // .catch(err => console.log(err))\n    // console.log(req.body)\n    // axios.post('http://localhost:5000/covid/new', formData)\n    // .then(response => {\n    //     console.log(response.data);\n    // });\n    // fetch('http://localhost:5000/covid/new', {\n    //     method: 'POST',\n    //     mode: 'cors',\n    //     crossDomain: 'true',\n    //     headers: {\n    //         'Content-Type': 'application/json',\n    //     },\n    //     body: JSON.stringify(data),\n    // })\n    // .then(response => response.json())\n    // .then(data => {\n    //     console.log('Success: ', data);\n    // })\n    // .catch((error) => {\n    //     console.error('Error: ', error)\n    // });\n  };\n\n  const handleChangeResult = event => {\n    setTestResult(event.target.value);\n  };\n\n  const useStyles = makeStyles(theme => ({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2)\n    }\n  }));\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pageLook\",\n    children: [/*#__PURE__*/_jsxDEV(BarcodeScannerComponent, {\n      width: 300,\n      height: 300,\n      onUpdate: (err, result) => {\n        if (result) setCovidTestCode(result.text);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        component: \"main\",\n        maxWidth: \"xs\",\n        children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h1\",\n            variant: \"h5\",\n            children: \"Scan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            component: \"form\",\n            onSubmit: handleSubmit,\n            noValidate: true,\n            sx: {\n              mt: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              margin: \"normal\",\n              required: true,\n              fullWidth: true,\n              id: \"CovidTestCode\",\n              label: \"Covid-19 Test ID\",\n              name: \"CovidTestCode\",\n              autoFocus: true,\n              value: CovidTestCode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              style: {\n                width: '100%'\n              },\n              className: classes.formControl,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"test\",\n                children: \"Test Result\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"test\",\n                id: \"TestResult\",\n                name: \"TestResult\",\n                value: TestResult,\n                onChange: handleChangeResult,\n                label: \"Test Result\",\n                fullWidth: true,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 'None',\n                  children: /*#__PURE__*/_jsxDEV(\"em\", {\n                    children: \"None\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 'Negative',\n                  children: \"Negative\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 'Positive',\n                  children: \"Positive\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 'Invalid',\n                  children: \"Invalid\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              fullWidth: true,\n              variant: \"contained\",\n              sx: {\n                mt: 3,\n                mb: 2\n              },\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Scanner, \"UGvV8pWuvvpktmaCorfjN65ILQg=\", true, function () {\n  return [useHistory];\n});\n\n_c = Scanner;\nexport default Scanner;\n\nvar _c;\n\n$RefreshReg$(_c, \"Scanner\");","map":{"version":3,"sources":["/Users/darrellbullock/Documents/ReactJS/quidell-tracker/client/src/components/Scanner.jsx"],"names":["React","useState","makeStyles","CssBaseline","Box","Container","Button","Typography","createTheme","ThemeProvider","TextField","Select","MenuItem","FormControl","InputLabel","useHistory","BarcodeScannerComponent","url","Scanner","props","history","TestResult","setTestResult","EinsteinID","setEinsteinID","CovidTestCode","setCovidTestCode","location","state","loginId","theme","handleSubmit","event","preventDefault","console","log","handleChangeResult","target","value","useStyles","formControl","margin","spacing","minWidth","selectEmpty","marginTop","classes","err","result","text","display","flexDirection","alignItems","mt","width","mb"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    CssBaseline,\n    Box,\n    Container,\n    Button,\n    Typography,\n    createTheme,\n    ThemeProvider,\n    TextField,\n    Select,\n    MenuItem, \n    FormControl,\n    InputLabel,\n} from '@material-ui/core';\n//import axios from 'axios';\n//import Alert from '@mui/material/Alert';\nimport { useHistory } from 'react-router-dom';\nimport BarcodeScannerComponent from 'react-webcam-barcode-scanner2';\n\nconst url = 'http://localhost:5000/covid/new'\n\nconst Scanner = (props) => {\n    const history = useHistory();\n    const [TestResult, setTestResult] = useState('');\n    const [EinsteinID, setEinsteinID] = useState('');\n    const [CovidTestCode, setCovidTestCode] = useState('Not Found')\n\n    setEinsteinID(history.location.state.loginId);\n\n    const theme = createTheme();\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        console.log(EinsteinID, TestResult, CovidTestCode);\n\n\n        // try {\n        //     await axios({\n        //         method: 'POST',\n        //         url: 'http://localhost:5000/covid/new',\n        //         data: {\n        //             EinsteinID: formData.get('userId'),\n        //             CovidTestCode: formData.get('testId'),\n        //             TestResult: formData.get('testResult'),\n        //         },\n        //         headers: { 'Content-Type': 'multipart/form-data' }\n        //     })\n        //     .then((response) => {\n        //         console.log(response)\n        //     })\n        // } catch (error) {\n        //     console.log(error)\n        // }\n\n        // console.log(event.currentTarget);\n\n        // console.log({\n        //     testID: formData.get('testId'),\n        //     testResult: formData.get('testResult'),\n        //     loginId: formData.get('userId')\n        // });\n\n\n        // console.log(data);\n\n        // fetch('http://localhost:5000/covid/new', {\n        //     method: 'POST',\n        //     headers: {\n        //         'Accept': 'application/json',\n        //         'Content-Type': 'application/json'\n        //     },\n        //     body: JSON.stringify({\n        //         EinsteinID: formData.get('userId'),\n        //         CovidTestCode: formData.get('testId'),\n        //         TestResult: formData.get('testResult')\n        //     })\n        // })\n        // .then(res => res.json())\n        // .then(data => console.log(data))\n        // .catch(err => console.log(err))\n\n        // console.log(req.body)\n\n        // axios.post('http://localhost:5000/covid/new', formData)\n        // .then(response => {\n        //     console.log(response.data);\n        // });\n        \n        // fetch('http://localhost:5000/covid/new', {\n        //     method: 'POST',\n        //     mode: 'cors',\n        //     crossDomain: 'true',\n        //     headers: {\n        //         'Content-Type': 'application/json',\n        //     },\n        //     body: JSON.stringify(data),\n        // })\n        // .then(response => response.json())\n        // .then(data => {\n        //     console.log('Success: ', data);\n        // })\n        // .catch((error) => {\n        //     console.error('Error: ', error)\n        // });\n    };\n\n    const handleChangeResult = (event) => {\n        setTestResult(event.target.value);\n    };\n\n    const useStyles = makeStyles((theme) => ({\n        formControl: {\n          margin: theme.spacing(1),\n          minWidth: 120,\n        },\n        selectEmpty: {\n          marginTop: theme.spacing(2),\n        },\n      }));\n\n    const classes = useStyles()\n\n    return (\n        <div className=\"pageLook\">\n            <BarcodeScannerComponent \n            width={300} \n            height={300}\n            onUpdate={(err, result) => {\n                if (result) setCovidTestCode(result.text)\n            }}\n            />\n\n            <ThemeProvider theme={theme}>\n                <Container component=\"main\" maxWidth=\"xs\">\n                    <CssBaseline />\n                    <Box\n                    sx={{\n                        marginTop: 8,\n                        display: 'flex',\n                        flexDirection: 'column',\n                        alignItems: 'center',\n                    }}\n                    >\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Scan\n                    </Typography>\n                    <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n                        <TextField\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"CovidTestCode\"\n                        label=\"Covid-19 Test ID\"\n                        name=\"CovidTestCode\"\n                        autoFocus\n                        value={CovidTestCode}\n                        />\n                        <FormControl style={{ width: '100%' }} className={classes.formControl}>\n                            <InputLabel id=\"test\">Test Result</InputLabel>\n                            <Select\n                            labelId=\"test\"\n                            id=\"TestResult\"\n                            name=\"TestResult\"\n                            value={TestResult}\n                            onChange={handleChangeResult}\n                            label=\"Test Result\"\n                            fullWidth\n                            >\n                                <MenuItem value={'None'}>\n                                    <em>None</em>\n                                </MenuItem>\n                                <MenuItem value={'Negative'}>Negative</MenuItem>\n                                <MenuItem value={'Positive'}>Positive</MenuItem>\n                                <MenuItem value={'Invalid'}>Invalid</MenuItem>\n                            </Select>\n                        </FormControl>\n                       \n                        <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        sx={{ mt: 3, mb: 2 }}\n                        >\n                        Submit\n                        </Button>\n                    </Box>\n                    </Box>\n                </Container>\n            </ThemeProvider>\n    \n        </div>\n    );\n}\n\n\n\n\nexport default Scanner;\n\n"]},"metadata":{},"sourceType":"module"}