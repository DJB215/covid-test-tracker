{"ast":null,"code":"var _jsxFileName = \"/Users/darrellbullock/Documents/ReactJS/quidell-tracker/client/src/components/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom'; //import axios from 'axios';\n\nimport LoginForm from './LoginForm';\nimport VerifyForm from './VerifyForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [activeStep, setActiveStep] = useState(0);\n  const [loginId, setLoginId] = useState(''); //const [verifyCode, setVerifyCode] = useState('');\n\n  const history = useHistory();\n  const steps = ['Einstein Login ID', 'Verification Code'];\n\n  const handleNextLogin = e => {\n    e.preventDefault();\n    setLoginId(document.getElementById('EinsteinId').value);\n    setActiveStep(activeStep + 1);\n  };\n\n  const handleNextVerify = e => {\n    e.preventDefault();\n    console.log(document.getElementById('secretCode').value); //setVerifyCode(document.getElementById('secretCode').value)\n\n    console.log('From next verify: ', values);\n    history.push({\n      pathname: '/scanner',\n      state: {\n        loginId: values.loginId\n      }\n    });\n  };\n\n  const handleBack = e => {\n    setActiveStep(activeStep - 1);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(e.target.value, loginId);\n  };\n\n  const handleChange = input => e => {\n    //console.log(document.getElementById('loginId').value);\n    console.log(input); //console.log(e.target.name)\n    // if (e.target.name === 'loginId') {\n    //     console.log(e)\n    //     //setLoginId(e.target.value)\n    //     //console.log(e.target.value);\n    // } else {\n    //     setVerifyCode(e.target.value)\n    // }\n  };\n\n  const values = {\n    loginId\n  };\n\n  switch (activeStep) {\n    case 0:\n      return /*#__PURE__*/_jsxDEV(LoginForm, {\n        handleChange: handleChange,\n        values: values,\n        handleNext: handleNextLogin,\n        steps: steps,\n        activeStep: activeStep,\n        handleSubmit: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this);\n\n    case 1:\n      return /*#__PURE__*/_jsxDEV(VerifyForm, {\n        handleChange: handleChange,\n        values: values,\n        handleBack: handleBack,\n        handleNext: handleNextVerify,\n        steps: steps,\n        activeStep: activeStep\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this);\n\n    default:\n      throw new Error('Unknown step');\n  }\n};\n\n_s(Login, \"nz7QL7QBqFEteVI5xI+iibh8msM=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/darrellbullock/Documents/ReactJS/quidell-tracker/client/src/components/Login.jsx"],"names":["React","useState","useHistory","LoginForm","VerifyForm","Login","activeStep","setActiveStep","loginId","setLoginId","history","steps","handleNextLogin","e","preventDefault","document","getElementById","value","handleNextVerify","console","log","values","push","pathname","state","handleBack","handleSubmit","target","handleChange","input","Error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,kBAA3B,C,CACA;;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC,CAFgB,CAGhB;;AAEA,QAAMS,OAAO,GAAGR,UAAU,EAA1B;AAEA,QAAMS,KAAK,GAAG,CAAC,mBAAD,EAAsB,mBAAtB,CAAd;;AAEA,QAAMC,eAAe,GAAIC,CAAD,IAAO;AAC3BA,IAAAA,CAAC,CAACC,cAAF;AACAL,IAAAA,UAAU,CAACM,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,KAAvC,CAAV;AACAV,IAAAA,aAAa,CAACD,UAAU,GAAG,CAAd,CAAb;AACH,GAJD;;AAMA,QAAMY,gBAAgB,GAAIL,CAAD,IAAO;AAC5BA,IAAAA,CAAC,CAACC,cAAF;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,KAAlD,EAF4B,CAG5B;;AAEAE,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCC,MAAlC;AACAX,IAAAA,OAAO,CAACY,IAAR,CAAa;AACTC,MAAAA,QAAQ,EAAE,UADD;AAETC,MAAAA,KAAK,EAAE;AAAEhB,QAAAA,OAAO,EAAEa,MAAM,CAACb;AAAlB;AAFE,KAAb;AAIH,GAVD;;AAYA,QAAMiB,UAAU,GAAIZ,CAAD,IAAO;AACtBN,IAAAA,aAAa,CAACD,UAAU,GAAG,CAAd,CAAb;AACH,GAFD;;AAIA,QAAMoB,YAAY,GAAIb,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYP,CAAC,CAACc,MAAF,CAASV,KAArB,EAA4BT,OAA5B;AACH,GAHD;;AAKA,QAAMoB,YAAY,GAAGC,KAAK,IAAIhB,CAAC,IAAI;AAC/B;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYS,KAAZ,EAF+B,CAG/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,GAXD;;AAaA,QAAMR,MAAM,GAAG;AAAEb,IAAAA;AAAF,GAAf;;AAEA,UAAQF,UAAR;AACI,SAAK,CAAL;AACI,0BACI,QAAC,SAAD;AACI,QAAA,YAAY,EAAEsB,YADlB;AAEI,QAAA,MAAM,EAAEP,MAFZ;AAGI,QAAA,UAAU,EAAET,eAHhB;AAII,QAAA,KAAK,EAAED,KAJX;AAKI,QAAA,UAAU,EAAEL,UALhB;AAMI,QAAA,YAAY,EAAEoB;AANlB;AAAA;AAAA;AAAA;AAAA,cADJ;;AAUJ,SAAK,CAAL;AACI,0BACI,QAAC,UAAD;AACI,QAAA,YAAY,EAAEE,YADlB;AAEI,QAAA,MAAM,EAAEP,MAFZ;AAGI,QAAA,UAAU,EAAEI,UAHhB;AAII,QAAA,UAAU,EAAEP,gBAJhB;AAKI,QAAA,KAAK,EAAEP,KALX;AAMI,QAAA,UAAU,EAAEL;AANhB;AAAA;AAAA;AAAA;AAAA,cADJ;;AAUJ;AACI,YAAM,IAAIwB,KAAJ,CAAU,cAAV,CAAN;AAxBR;AA0BH,CA7ED;;GAAMzB,K;UAKcH,U;;;KALdG,K;AA+EN,eAAeA,KAAf","sourcesContent":["import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n//import axios from 'axios';\nimport LoginForm from './LoginForm';\nimport VerifyForm from './VerifyForm';\n\nconst Login = () => {\n    const [activeStep, setActiveStep] = useState(0);\n    const [loginId, setLoginId] = useState('');\n    //const [verifyCode, setVerifyCode] = useState('');\n\n    const history = useHistory();\n\n    const steps = ['Einstein Login ID', 'Verification Code'];\n\n    const handleNextLogin = (e) => {\n        e.preventDefault();\n        setLoginId(document.getElementById('EinsteinId').value);\n        setActiveStep(activeStep + 1 );\n    }\n\n    const handleNextVerify = (e) => {\n        e.preventDefault();\n        console.log(document.getElementById('secretCode').value)\n        //setVerifyCode(document.getElementById('secretCode').value)\n        \n        console.log('From next verify: ', values);\n        history.push({\n            pathname: '/scanner',\n            state: { loginId: values.loginId }\n        });\n    }\n\n    const handleBack = (e) => {\n        setActiveStep(activeStep - 1 );\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(e.target.value, loginId)\n    }\n\n    const handleChange = input => e => {\n        //console.log(document.getElementById('loginId').value);\n        console.log(input)\n        //console.log(e.target.name)\n        // if (e.target.name === 'loginId') {\n        //     console.log(e)\n        //     //setLoginId(e.target.value)\n        //     //console.log(e.target.value);\n        // } else {\n        //     setVerifyCode(e.target.value)\n        // }\n    }\n\n    const values = { loginId }\n\n    switch (activeStep) {\n        case 0:\n            return (\n                <LoginForm\n                    handleChange={handleChange}\n                    values={values}\n                    handleNext={handleNextLogin}\n                    steps={steps}\n                    activeStep={activeStep}\n                    handleSubmit={handleSubmit}\n                />\n            );\n        case 1:\n            return (\n                <VerifyForm\n                    handleChange={handleChange}\n                    values={values}\n                    handleBack={handleBack}\n                    handleNext={handleNextVerify}\n                    steps={steps}\n                    activeStep={activeStep}\n                />\n            );\n        default:\n            throw new Error('Unknown step');\n    }\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}